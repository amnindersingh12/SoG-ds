<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        LTYO9OrV/wFgWrazweU2oAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="pictureBox2.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        LTYO9OrV/wFgWrazweU2oAAAAABJRU5ErkJggg==
</value>
  </data>
</root>